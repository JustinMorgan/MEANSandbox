{"name":"MEAN-Sandbox","tagline":"Playground for the MEAN stack.","body":"# MeanSandbox\r\nThis is a playground project to experiment with Node.js and the MEAN stack. I'll be experimenting with implementation,\r\ncode organization, design patterns, and best practices in various aspects of Node development:\r\n- REST API\r\n- Developing in CoffeeScript \r\n  - On-the-fly parsing (not compiling to JS first)\r\n  - Performance when server code isn't precompiled\r\n  - Performance when client scripts aren't precompiled\r\n- MongoDB and Mongoose\r\n  - Optimal lifecycle for connections and repositories\r\n- Unit testing\r\n  - Server-side\r\n  - Client-side\r\n  - Angular controllers\r\n- Authentication\r\n- Cloud-based development\r\n  - Cloud-based IDE\r\n  - Cloud hosting for app and DB\r\n  - CDNs\r\n- Jade view templates\r\n- SASS, LESS, and/or Stylus\r\n- Automation and package management\r\n  - Building \r\n  - Installing \r\n  - Client-side dependency management\r\n  - Bower, Yeoman, Grunt, Browserify, etc.\r\n- Code generation (generate API, client, and templates based on a given schema)\r\n\r\nNote that this is an experimental project, and very much a work in progress. It needs refactoring, bug fixes, and more automation. All these things are high priority and likely to improve soon. **Comments, suggestions, and pull requests are welcome.**\r\n\r\n#Setup\r\nNote: Not tested recently; beware of missing dependencies. This will be much more automated soon.\r\n\r\n1. Pull the repo onto your filesystem and run the following:\r\n\r\n    ```\r\n    npm install -g coffee-script\r\n    npm install\r\n    ```\r\n2. Create `/api/config/connection.json`. It should look like this:\r\n\r\n    ```\r\n    {\r\n        \"mongoUrl\":\"<your.mongoDb.connection.string>\"\r\n    }\r\n    ```\r\n3. Examine the \"known issues\" section below.\r\n\r\n#Known issues\r\n1. If you're going to use BundleUp to render coffee and sass files, see my pull request on the BundleUp project: https://github.com/Cowboy-coder/bundle-up/pull/40. `app.locals` is no longer a function in Express 4, so BundleUp breaks. The PR resolves this.\r\n    \r\n2. I prefer the .sass coding style, but I can't find a single NPM package that supports rendering .sass files, only .scss. The plain `sass` NPM package supports doing it from the command line, but I can't get it to work inside the server. Current best workaround is to save the .sass file, then do one of the following from the command line:\r\n\r\n    ```\r\n    sass assets/stylesheets/style.sass public/stylesheets/style.css \r\n    ```\r\nor\r\n\r\n    ```\r\n    sass-convert assets/stylesheets/style.sass assets/stylesheets/style.scss  \r\n    ```\r\nI plan to either \r\n  a) figure out how to do this on the fly, \r\n  b) automate the conversion (e.g. on saving a .sass file), or \r\n  c) switch over to Stylus. \r\nLeaning heavily toward c).\r\n    \r\n3. Production mode is only partially set up and probably won't work as-is. At the very least, paths and routes will need to change, and BundleUp will need to be reconfigured.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}