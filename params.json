{"name":"MEAN-Sandbox","tagline":"Playground for the MEAN stack.","body":"# MeanSandbox\r\nThis is a playground project to explore Node.js and the MEAN stack. I'll be experimenting with implementation,\r\ncode organization, design patterns, and best practices in various areas of Node development.\r\n- REST API\r\n- Jade view templates\r\n- SASS, LESS, and/or Stylus\r\n- Authentication\r\n- Code generation (generate API, client, and templates according to schema)\r\n- Node development in CoffeeScript \r\n  - Server-side, with and without precompilation\r\n  - Client-side, rendering as JS on the fly\r\n  - Performance when not precompiled\r\n- MongoDB and Mongoose\r\n  - Optimal lifecycle for connections and DB objects\r\n- Testing\r\n  - Server-side unit tests\r\n  - Angular unit tests\r\n  - Automated UI tests\r\n- Automation and package management\r\n  - Building \r\n  - Installing \r\n  - Client-side dependency management\r\n  - Bower, Yeoman, Grunt, Browserify, etc.\r\n\r\nNote that this is an experimental project, and very much a work in progress. It's getting refactored, reorganized, and improved. **Comments, suggestions, and pull requests are welcome.**\r\n\r\n#Setup\r\n**Note: Not tested recently; beware of missing dependencies.** This will be more automated soon.\r\n\r\n1. Pull the repo onto your filesystem and run the following:\r\n\r\n    ```\r\n    npm install -g coffee-script\r\n    npm install\r\n    ```\r\n2. Create `config.json` in the root folder. It should look something like this:\r\n\r\n    ```\r\n    {\r\n        \"env\": <\"development\" or \"production\">,\r\n        \"mongoUrl\": \"mongodb://<user>:<password>@<server-url>/<database>\"\r\n    }\r\n    ```\r\n3. Examine the \"known issues\" section below.\r\n\r\n#Known issues\r\n1. ~~BundleUp is broken in Express 4.0.0, see my pull request on the BundleUp project: https://github.com/Cowboy-coder/bundle-up/pull/40.~~ **RESOLVED: Now using `connect-assets` for asset management.**\r\n2. ~~Poor support for rendering SASS on the fly.~~ **RESOLVED: Now using Stylus instead, with much better results.**\r\n3. Production mode may require more configuration, especially for `connect-assets`.\r\n\r\n#Next steps\r\n1. Dynamically generate multiple Angular front-ends from a list of schemas. I'm already doing this on the back end with dynamic REST APIs.\r\n2. Automate installation.\r\n3. Unit testing.","google":"UA-61033016-1","note":"Don't delete this file! It's used internally to help with page regeneration."}